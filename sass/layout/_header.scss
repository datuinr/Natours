.header {
    height: 85vh;
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.801), /*hex with transparency only works with sass*/
        rgba($color-primary-dark, 0.801)), 
        url(../img/hero-small.jpg); 
    /*linear-gradient followed by a comma will add a gradient on top of hero image
    adding "to right", CSS now understands to start from left to right
    adding "to right bottom" directs it to the bottom right corner
    rgba - color opacity;
    */
    background-size: cover;
    background-position: top; /* top center or bottom */
    position: relative;
    /*
    polygon(x y, x y, x y, x y)
    specify the corners to get desired polygon
    */

    @supports (clip-path: polygon(0 0)) or (-webkit-clip-path: polygon(0, 0)) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
        height: 95vh;
    }

    @media (min-resolution: 192dpi) and (min-width: 37.5em), 
            (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
            (min-width: 125em) {
        background-image: linear-gradient(
            to right bottom,
            rgba($color-primary-light, 0.801), /*hex with transparency only works with sass*/
            rgba($color-primary-dark, 0.801)), 
            url(../img/hero.jpg); 
    }

    @include respond(phone) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    &_logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &_logo {
        height: 3.5rem;
    }
    
    &_text-box {
        position: absolute;
        top: 40%;
        left: 50%;
        transform: translate(-50%, -50%); /*it will be shifted half of the width of the left side*/
        text-align: center;
    }
}